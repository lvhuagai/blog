<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>CaCl2&#39;s Space</title>
        <link>https://example.com/</link>
        <description>Recent content on CaCl2&#39;s Space</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 25 May 2022 06:50:59 +0000</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>使用阿里云盘WebDAV协议搭建kodi影视中心</title>
        <link>https://example.com/aliyundrive-webdav-kodi/</link>
        <pubDate>Wed, 25 May 2022 06:50:59 +0000</pubDate>
        
        <guid>https://example.com/aliyundrive-webdav-kodi/</guid>
        <description>&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;几天前，博主把家里老电脑的硬盘拆了下来，打算做一个局域网NAS系统，存放Kodi使用的影视资源。然而SATA转usb线还未下单，博主就喜提7+3隔离。无意间看到kodi支持WebDAV协议，但之前的COS对象存储方案流量费属实让人肉疼，无意间我在GitHub看到了一个项目，可以将阿里云盘以WebDAV的形式挂载到本地局域网。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&#39;github-info-card-description&#39;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;搭配此项目，只要将影视资源保存在阿里云盘，本地的Kodi就可以播放，免去了本地搭建文件服务器这一环节。&lt;/p&gt;
&lt;h2 id=&#34;操作&#34;&gt;操作&lt;/h2&gt;
&lt;h3 id=&#34;下载二进制文件&#34;&gt;下载二进制文件&lt;/h3&gt;
&lt;p&gt;aliyundrive-webdav支持多种架构的设备，可运行在x86，mipsel，arm等多种平台的设备上。&lt;/p&gt;
&lt;p&gt;博主的树莓派已经提前安装好了Kodi，只需要配置阿里云盘在局域网的WebDAV即可。博主打算把这个项目运行在树莓派上，因此在Releases下载已经编译好的二进制文件，ArmV7架构。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;解压后给予相应权限。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;程序的命令行用法。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;获取refresh_token&#34;&gt;获取refresh_token&lt;/h3&gt;
&lt;p&gt;随后我们需要到阿里云盘网页端获取自己账户的refresh_token。&lt;/p&gt;
&lt;p&gt;浏览器登录&lt;a class=&#34;link&#34; href=&#34;https://www.aliyundrive.com/drive/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阿里云盘&lt;/a&gt;后，在控制台输入&lt;code&gt;JSON.parse(localStorage.token).refresh_token&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即可获得当前账户的refresh_token。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;我们也可以手动获取refresh_token。&lt;/p&gt;
&lt;p&gt;登录&lt;a class=&#34;link&#34; href=&#34;https://www.aliyundrive.com/drive/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;阿里云盘&lt;/a&gt;后，可以在开发者工具 -&amp;gt; Application -&amp;gt; Local Storage 中的 &lt;code&gt;token&lt;/code&gt; 字段中找到。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;开始运行&#34;&gt;开始运行&lt;/h3&gt;
&lt;p&gt;使用ssh连接至树莓派，在二进制文件同一目录下输入指令。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;将&amp;lt;REFRESH_TOKEN&amp;gt;字段替换为刚刚获取的refresh token即可。运行后如图所示。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;这时WebDAV服务就已经在本地局域网运行，局域网内设备使用 设备的局域网IP:8080 即可连接对应的WebDAV服务器。在Windows下使用RaiDrive等软件可以将其挂载至文件资源管理器。&lt;/p&gt;
&lt;h3 id=&#34;kodi的连接&#34;&gt;Kodi的连接&lt;/h3&gt;
&lt;p&gt;这时我们将搭载kodi的设备连接至同一局域网，在“视频”选项卡点击“添加视频”选项。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;点击左侧的浏览按钮。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;点击添加网络位置。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;我们选择协议“WebDAV服务器（HTTP）”，服务器地址填写运行上述项目的局域网IP，端口为8080，用户名和密码不需要填写，远程路径自定义即可。设置完成后点击确定。&lt;/p&gt;
&lt;p&gt;完成上述操作后一路确定，我们就可以在kodi中访问远程目录的视频了。但此时视频并不会显示电影名称 海报等元素，只是以视频的形式呈现。下一篇文章会解决这一问题&lt;/p&gt;
</description>
        </item>
        <item>
        <title>利用腾讯云对象存储COS与轻量应用云服务器搭建私有云</title>
        <link>https://example.com/qcloud-cos-netdisk/</link>
        <pubDate>Sun, 01 May 2022 03:30:21 +0000</pubDate>
        
        <guid>https://example.com/qcloud-cos-netdisk/</guid>
        <description>&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;最近博主沉迷于Doctor Who，但无奈找到的资源都在百度网盘，下载速度极慢，在线观看的流畅度也堪忧，如果自己搭建一个私有云，那就不必忍受各种网盘的限制，多平台在线观看。但苦于云服务器昂贵的宽带价格，一直没能如愿，如果用5Mbps的小水管，效果甚至不如百度网盘。But，前段时间我从朋友那里了解到了对象存储，便心想将私有云接入对象存储即可解决这一问题。&lt;/p&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;h3 id=&#34;对象存储的概念&#34;&gt;对象存储的概念&lt;/h3&gt;
&lt;p&gt;什么是对象存储？我查阅了Wikipedia，他们给出的解释是：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;不知道大家看完是什么样的心情，反正我当场就：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;说人话就是：一个多节点，非结构存储，扁平结构，弹性扩容的文件储存服务。（目前本文的图片已经正在使用对象存储）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非结构存储：对象存储适用于存储非结构化的数据，我们日常生活中见到的文档、文本、图片、XML, HTML、各类报表、音视频信息等等都是非结构化数据。据统计，自社交网络发展以来，非结构化数据占总数据量的75%。&lt;/li&gt;
&lt;li&gt;多节点：以腾讯云对象存储 COS 为例，COS的存储机房遍布全球，简单来说，不管你身处何处，都可以选择将数据存储在就近的机房，加快数据的传输访问。&lt;/li&gt;
&lt;li&gt;扁平结构：对象存储中没有文件夹的概念，所有数据均存储在同一个层级中，如上述介绍提到，对于存在对象存储中的数据，你不需要知道他存在哪里，只需要通过“凭证”就可以快速获取数据。&lt;/li&gt;
&lt;li&gt;弹性扩容：对象存储的容量是EB级以上的，EB有多大？1EB ≈ 1*10^9 GB。&lt;!-- raw HTML omitted --&gt;（这条忽略，个人用户没有需求用这么大的）&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;常用的对象存储服务&#34;&gt;常用的对象存储服务&lt;/h3&gt;
&lt;p&gt;这是博主使用的Cloudreve网盘系统支持的对象存储服务。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;博主的服务器在腾讯云，于是便选择了腾讯云的cos作为对象存储服务，腾讯云cos新用户免费赠送半年。&lt;/p&gt;
&lt;h2 id=&#34;操作&#34;&gt;操作&lt;/h2&gt;
&lt;h3 id=&#34;开通cos对象存储服务&#34;&gt;开通COS对象存储服务&lt;/h3&gt;
&lt;p&gt;进入腾讯云对象存储的页面，点击创建存储桶，弹出如下页面。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;如果要在腾讯云的服务器部署网盘系统，请选择与服务器一致的地域，这样会更加节省流量。存储桶名称自定义。访问权限设为公有读私有写。&lt;/p&gt;
&lt;p&gt;创建完成后我们便开始进行服务器的配置。&lt;/p&gt;
&lt;h3 id=&#34;网盘系统的搭健&#34;&gt;网盘系统的搭健&lt;/h3&gt;
&lt;p&gt;博主这里使用的是腾讯云的轻量应用服务器，可以一键部署Cloudreve系统，如果你使用的不是轻量应用服务器，则需要手动部署，这里不再赘述。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;搭建完成后直接访问服务器的IP（别问我为什么不用域名，问就是没备案），便可以看到网盘系统已经部署好了。根据提示获取管理员账号和密码，即可进入网盘系统。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;但值得注意的是，此时并不会使用对象存储，而是直接将文件保存在服务器本地。我们还需要进行存储策略的配置。&lt;/p&gt;
&lt;h3 id=&#34;配置存储策略&#34;&gt;配置存储策略&lt;/h3&gt;
&lt;p&gt;登录Cloudreve系统后，点击右上角的头像，选择管理面板，我们便进入了网盘的后台管理系统。在左侧栏点击存储策略，随后点击新建存储策略&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;随后选择你使用的对象存储服务，我这里使用的是腾讯云 COS。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;按照Cloudreve的向导完成操作即可。&lt;/p&gt;
&lt;h3 id=&#34;用户组的设置&#34;&gt;用户组的设置&lt;/h3&gt;
&lt;p&gt;完成上述操作后，在管理面板中打开用户组，将管理员（也就是你所在的用户组）的存储策略改为你刚刚配置的策略。配置好相关选择，点击保存即可。这时你上传文件时，使用的就是COS的对象存储服务。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;小结&#34;&gt;小结&lt;/h2&gt;
&lt;p&gt;博主搭建完这个系统后，将电脑中的Doctor Who资源存储到了网盘中，上传下载速度很可观，均可跑满宽带，在线观看视频几乎不需要加载。可以欢乐地在线看视频了。&lt;strong&gt;本文不是腾讯云的恰饭推广文章，其它的对象存储服务商也可以使用，例如七牛云，又拍云等。&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>接收JMH气象传真</title>
        <link>https://example.com/%E6%8E%A5%E6%94%B6jmh%E6%B0%94%E8%B1%A1%E4%BC%A0%E7%9C%9F/</link>
        <pubDate>Sun, 03 Apr 2022 13:48:26 +0000</pubDate>
        
        <guid>https://example.com/%E6%8E%A5%E6%94%B6jmh%E6%B0%94%E8%B1%A1%E4%BC%A0%E7%9C%9F/</guid>
        <description>&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;清明假期闲得无聊，把小环天线架在了窗外，正好赶上下午传播来了，便尝试收了一下JMH的气象传真。效果图如下。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;需要的软件有：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://cacl2.ysepan.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VAC虚拟声卡&lt;/a&gt; 用于将音频输出loopback至音频输入。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://cacl2.ysepan.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;KG-FAX&lt;/a&gt; 用于气象传真的解码。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://cacl2.ysepan.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ntleas转码软件&lt;/a&gt; 由于KG-FAX编码是 Shift-JIS 不适配简体中文系统 因此使用该软件进行转码。&lt;strong&gt;（可选，Windows10可以正常打开KG-FAX，如果不想有乱码就用这个，无所谓的话可以直接打开）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其他条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一根短波天线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;较好的传播及接收环境&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里博主使用了有源小环天线进行接收，这款天线在0.1MHz-180MHz的频段有着不俗的表现。SDR接收机使用了前几篇文章出场过的&lt;!-- raw HTML omitted --&gt;祖国版&lt;!-- raw HTML omitted --&gt;SdrPlay RSP1A。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;开始接收&#34;&gt;开始接收&lt;/h2&gt;
&lt;h3 id=&#34;虚拟声卡配置&#34;&gt;虚拟声卡配置&lt;/h3&gt;
&lt;p&gt;首先进行虚拟声卡的配置，首先安装VAC虚拟声卡软件，安装完成后打开Windows的声音设置，将默认输入设备改成”&lt;em&gt;Line 1(Virtual Audio Cable)&lt;/em&gt;“&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;频率调整&#34;&gt;频率调整&lt;/h3&gt;
&lt;p&gt;得益于博主强大的情报网，我搞到了一份美国国家海洋和大气管理局编写的&lt;a class=&#34;link&#34; href=&#34;http://cacl2.ysepan.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;全球气象传真频率表&lt;/a&gt;，查询后得知，JMH分别在3622.5 kHz 7795kHz和13988.5kHz 24h全天候播发，博主在根据自身条件在这里选择了在13988.5kHz接收，由于使用USB上边带模式接收，调整好对应频差后即为在13986.6kHz接收。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;随后将SDRuno的输出设备改为之前配置的虚拟声卡。如果是SDRuno，点击RX CONTROL面板的SETT.，在OUT中选择”&lt;em&gt;Line 1(Virtual Audio Cable)&lt;/em&gt;“，重新开始即可。&lt;/p&gt;
&lt;h3 id=&#34;开始解码&#34;&gt;开始解码&lt;/h3&gt;
&lt;p&gt;使用Ntleas打开KG-FAX，可以在左边看到三个按钮。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;点击“掃引”按钮立即开始图像的解码。点击“自動制御”将会在接收到开始信号后才开始解码，如果图像此时已经传送了一半便无法解码，适用于想要接收一张完整传真的场景。点击“自动保存”按钮后可以设置图像解码完成后的保存路径。&lt;/p&gt;
&lt;p&gt;随后软件就会开始自动解码，片刻后一张FAX传真就会完成。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
        </item>
        <item>
        <title>树莓派＋RTLSDR搭建ADS-B监测站点</title>
        <link>https://example.com/raspi-adsb-station/</link>
        <pubDate>Thu, 24 Mar 2022 06:24:18 +0000</pubDate>
        
        <guid>https://example.com/raspi-adsb-station/</guid>
        <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;
&lt;p&gt;近期中国东方航空MU5735航班发生事故坠毁，痛心之余不知大家是否注意到，各大媒体都不约而同地引用了这样一张数据图：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;这张图中清晰地显示了东航MU5735在坠落前的速度，高度等数据。飞机已经损毁到如此程度，这些数据又是怎么保存下来的呢？这便用到了我们今天所要介绍的ADS-B。&lt;/p&gt;
&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;民航客机会在1090MHz发射电磁波信号，将客机此刻的速度，方位，高度，方位角等信息下传至机场塔台。由于这一过程中的数据包并不加密，因此作为一个普通人我们也可以接收到这些数据包并通过软件解码，Flightradar24便是应用了这一原理。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;博主手头的RTL-SDR搭配原装天线加上树莓派就可以搭建一个微型个人ADS-B站点。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;制作&#34;&gt;制作&lt;/h2&gt;
&lt;h3 id=&#34;方案选择&#34;&gt;方案选择&lt;/h3&gt;
&lt;p&gt;博主使用了树莓派3B+与RTL-SDR的方案，使用Dump1090进行信号的解码。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;github-info-card-description&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;软件安装及配置&#34;&gt;软件安装及配置&lt;/h3&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;dump1090为我们提供了图形化的配置界面，因此我们可以很轻松地对软件进行配置。&lt;/p&gt;
&lt;h3 id=&#34;访问web页面&#34;&gt;访问web页面&lt;/h3&gt;
&lt;p&gt;上述指令执行完成后，我们将树莓派连入局域网，访问下面的链接，将IP替换为树莓派的内网IP即可访问web图形界面。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;把天线放在合适的位置，即可看到地图上显示的数据。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;内网穿透可选&#34;&gt;内网穿透（可选）&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;作为一个爱折腾的人，仅止于局域网访问肯定是不够的，受限于博主所处的全锥形NAT网络，想起半个月前白嫖到了腾讯云免费的一个月轻量应用服务器，便在上面部署了NPS内网穿透。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;github-info-card-description&amp;quot;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;在本地树莓派上部署好NPC后，输入指定IP与端口，便可以让外网访问你的ADS-B监测站点，由于有被请喝茶的风险，在这里博主就不放出链接了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Minecraft服务器【上】: 建设与优化</title>
        <link>https://example.com/minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%90%E4%B8%8A%E3%80%91-%E5%BB%BA%E8%AE%BE%E4%B8%8E%E4%BC%98%E5%8C%96/</link>
        <pubDate>Wed, 09 Mar 2022 08:07:04 +0000</pubDate>
        
        <guid>https://example.com/minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%90%E4%B8%8A%E3%80%91-%E5%BB%BA%E8%AE%BE%E4%B8%8E%E4%BC%98%E5%8C%96/</guid>
        <description>&lt;p&gt;在上一篇说说中，博主提到了要用服务器开私服。在一个阳光晴好的下午，我开始了服务器的建设：&lt;/p&gt;
&lt;h2 id=&#34;服务端的选择&#34;&gt;服务端的选择&lt;/h2&gt;
&lt;p&gt;由于多年未涉足MC服务器圈，我首先粗略了解了一下目前的主流服务端。&lt;/p&gt;
&lt;p&gt;众所周知，像博主这种喜欢折腾的人，自然不会选择官方提供的服务端，我查到了&lt;a class=&#34;link&#34; href=&#34;https://minecraft.fandom.com/zh/wiki/%E5%AE%9A%E5%88%B6%E6%9C%8D%E5%8A%A1%E5%99%A8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Minecraft Wiki&lt;/a&gt;上提供的第三方服务端列表。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;经过一系列权衡后，博主选择了&lt;a class=&#34;link&#34; href=&#34;https://www.spigotmc.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Spigot端&lt;/a&gt;。选择这个服务端主要是因为其优秀的性能表现和对原版特性的支持&lt;!-- raw HTML omitted --&gt;说白了就是服务器配置太拉&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
&lt;h2 id=&#34;开始安装&#34;&gt;开始安装&lt;/h2&gt;
&lt;p&gt;Spigot的BuildTools需要JAVA17。得益于Debian系强大的APT包管理器，博主很方便地成功安装了jdk17。&lt;/p&gt;
&lt;p&gt;打开Spigot的官网后，下载BuildTool.jar。根据网站上的指引我执行了如下指令&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;正当博主泡上一壶碧螺春，准备让服务器自动构建时，发现构建工具在一个进程上卡住了。莫约15分钟后，我手里的碧螺春都凉了，服务器依旧卡在那里。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;根据我敏锐的观察力，发现是下载服务端时出了问题。于是我尝试wget直接下载服务端。于是乎&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;鉴于服务器感人的网速，博主进行了一系列魔法操作，成功提高了下载速度。等待其自行下载和编译服务端即可。&lt;/p&gt;
&lt;p&gt;构建完成后，直接运行服务端文件。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;正当我满心欢喜等着服务器开起来时，突然又报错了。定睛一看，原来是要接受他们的EULA，不然不能开服。&lt;!-- raw HTML omitted --&gt;霸王条款了属于是&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;接受EULA后，服务器便正常运行起来了。至此服务器安装完成。&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;p&gt;打开server.properties，便可以对服务器进行基本的设置。据博主了解，身边的朋友80%使用的是mc盗版，剩下的20%玩网易。因此博主便关闭了online-mode，使得盗版账号也可正常进入服务器游玩。&lt;/p&gt;
&lt;p&gt;一切都配置好后，我便找了一个朋友邀请他玩服务器：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;问了一圈下来，博主发现身边大部分人玩的都是基岩版，剩下的一部分人觉得配置java很麻烦&lt;!-- raw HTML omitted --&gt;雀实&lt;!-- raw HTML omitted --&gt;，用java版的少之又少。开基岩版服务器自然是不可能的，第三方支持极少，根本不符合我爱折腾的性格。&lt;/p&gt;
&lt;p&gt;就在这时，我检索到了一个叫做Geyser的插件。可以实现BE-JE间的服务器互通，放入spigot的plugin目录即可使用，为了使盗版玩家也能顺利进服游玩，我又下载了Geyser官方提供的Floodgate插件进行基岩版用户的登录。&lt;/p&gt;
&lt;p&gt;随后，博主又在服务器上装了一些基本的插件，诸如领地，经济之类。找了几个好友后，便把服务器开了起来。&lt;/p&gt;
&lt;h2 id=&#34;优化&#34;&gt;优化&lt;/h2&gt;
&lt;p&gt;一日下午，眼看时间来到三点几，我正在饮茶，这时有人私发我qq：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;我心想服务器配置是差点，也不至于这么卡。强忍住怒火后，我进入游戏，发现tps达到了惊人的个位数。翻看聊天记录，我看到了这一幕：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;这不卡才怪…我心里想着，但让他们这么一直跑图也不是个事，且不说服务器压力有多大，而且我也要背负不少玩家的骂名。回想起前几日与我服一老玩家，现服主的交流。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;我便开始询问他&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;一顿操作后我下载了Chunky，丢到服务器插件目录，输入指令，设置边界，开始预载世界后我遍把他丢在那里。第二天早上起来，发现生成进度才10%，截至本文发布时，世界还没有预载完。但已加载的区块中明显流畅了许多。&lt;/p&gt;
&lt;p&gt;To be continued…..&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
        </item>
        <item>
        <title>树莓派清灰日记：制作全模式全频段电台</title>
        <link>https://example.com/rspi-radio/</link>
        <pubDate>Wed, 02 Mar 2022 02:00:24 +0000</pubDate>
        
        <guid>https://example.com/rspi-radio/</guid>
        <description>&lt;p&gt;自从四年前从某同学那里拿到&lt;!-- raw HTML omitted --&gt;白嫖&lt;!-- raw HTML omitted --&gt;一台树莓派3B+后，除了偶尔用过几次，大部分时间是吃灰的。但事情的转机出现在半个月前的下午，我在GitHub日常检索时发现了一个有趣的项目：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&#39;github-info-card-description&#39;&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h3 id=&#34;简单的原理介绍&#34;&gt;简单的原理介绍&lt;/h3&gt;
&lt;p&gt;其实以前我就玩过类似的项目，但仅止于87.5MHz-108MHz的FM Broadcast频段，发射的模式也只有FM。其实这两者间原理都类似：&lt;/p&gt;
&lt;p&gt;根据麦克斯韦的电磁理论&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;随时间变化的电场产生磁场，而随时间变化的磁场又产生电场，两者互为因果。这种不断转化的场统称为电磁场。这种相互的转化形成电磁振荡。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以如果在树莓派的 GPIO 上，通过软件控制以一定频率输出高低电平，再加上适当长度的天线，就可以将能量以电磁波的形式发射出去。&lt;/p&gt;
&lt;h3 id=&#34;上手实操&#34;&gt;上手实操&lt;/h3&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;这个项目最吸引我的是它广得惊人的发射范围 可支持50KHz-1GHz的信号发射和几乎所有模式的支持，虽然不清楚具体原理，但我估计FM是用调主频PLL的方式产生调频，SSB则是加上PWM控制幅度。&lt;/p&gt;
&lt;p&gt;作者在Repo里列出了这样一张表格&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持状态
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  部分支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  支持
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;td&amp;gt;
  测试中
&amp;lt;/td&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;我拿出积了一层灰的树莓派3B+，开始了折腾之旅。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h4 id=&#34;安装&#34;&gt;安装&lt;/h4&gt;
&lt;p&gt;首先把仓库clone下来，运行内置的安装脚本&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;由于家里宽带的原因，GitHub访问日常抽风(点名批评中国移动)。漫长的一个小时过后，GitHub clone下的文件终于全部编译成功，编译完成后他会询问你是否需要超频&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;前期安装工作便正式完成了&lt;/p&gt;
&lt;h4 id=&#34;使用&#34;&gt;使用&lt;/h4&gt;
&lt;p&gt;作者很贴心地在仓库中给出了一键发射的脚本。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;输入输出频率后，便进入了这个页面&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;好家伙，支持很多模式啊。只要用方向键移到对应的模式就可以进行发射。发射在GPIO4上，于是我在GPIO4上插了半根杜邦线当作天线。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;当然，你也可以选择接入一根天线以达到最大的发射效率，但请首先接入一个带通滤波器，树莓派发射的杂散惊人。&lt;/p&gt;
&lt;h4 id=&#34;验证&#34;&gt;验证&lt;/h4&gt;
&lt;p&gt;无线电波看不见也摸不着，我就在想如何验证信号真的发出了呢？这时我又想起我吃灰一年半的&lt;!-- raw HTML omitted --&gt;祖国版&lt;!-- raw HTML omitted --&gt;SDRPlay RSP1A，支持1KHz-2GHz的信号接收。（如果你有RTL-SDR也可以，笔者不用RTL-SDR是因为这个设备后续可以与rpitx结合使用）&lt;/p&gt;
&lt;p&gt;连接电脑，打开SDRuno，这里我薅了一个手台的天线用来接收。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;艰难地将其固定好后，我便调好频率 按下发射键，一个不断移动的载波信号便在中心频率附近跳动&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;随后又尝试了各种模式，立体声FM，窄带FM和各种数传（当时忘记截图了）。&lt;/p&gt;
&lt;p&gt;作为一个ham，我又尝试了其在短波上的发射情况，我在14270khz发射了单边带信号，用有源小环天线也实现了正常的接收。&lt;/p&gt;
&lt;h2 id=&#34;节目预告rtl-sdrrpitx&#34;&gt;节目预告：RTL-SDR+Rpitx=?&lt;/h2&gt;
&lt;p&gt;这个项目搭配RTL-SDR可以有更多进阶玩法，笔者也正在慢慢探索中，下一篇文章会详细跟大家聊聊&lt;!-- raw HTML omitted --&gt;其实就是懒得弄了&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>建站小记</title>
        <link>https://example.com/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/</link>
        <pubDate>Tue, 01 Mar 2022 06:53:19 +0000</pubDate>
        
        <guid>https://example.com/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/</guid>
        <description>&lt;p&gt;由于疫情的原因，我被迫在家上网课，&lt;!-- raw HTML omitted --&gt;很爽&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
&lt;p&gt;一日上网课时，我如爬虫一般在进行网络冲浪，一则信息映入我的眼帘：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;（为避免恰饭之嫌，部分信息被隐去）&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;于是乎，我便冲动消费，买了一年服务器。最初我用这台服务器搭建了Minecraft服务器，but回想起两年前我当服主的艰难岁月，我不禁在内心叩问自己：为什么要开游戏服？&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;又回想起我三年前荒废已久的个站（我互联网履历还蛮丰富的嘛），便想重拾这一大业&lt;!-- raw HTML omitted --&gt;三分钟热度&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
&lt;p&gt;如你所见，本站应运而生了。&lt;/p&gt;
&lt;p&gt;未来我将在本站分享自己的生活，一些奇怪的想法和相关记录！感谢您的关注！&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://example.com/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Links</title>
        <link>https://example.com/links/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/links/</guid>
        <description>&lt;p&gt;To use this feature, add &lt;code&gt;links&lt;/code&gt; section to frontmatter.&lt;/p&gt;
&lt;p&gt;This page&amp;rsquo;s frontmatter:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;links&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GitHub is the world&amp;#39;s largest software development platform.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.com&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;website&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;https://www.typescriptlang.org&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ts-logo-128.jpg&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;image&lt;/code&gt; field accepts both local and external images.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Search</title>
        <link>https://example.com/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/search/</guid>
        <description></description>
        </item>
        <item>
        <title>关于</title>
        <link>https://example.com/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;p&gt;This is a test page for i18n support.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
