[{"content":"引子 几天前，博主把家里老电脑的硬盘拆了下来，打算做一个局域网NAS系统，存放Kodi使用的影视资源。然而SATA转usb线还未下单，博主就喜提7+3隔离。无意间看到kodi支持WebDAV协议，但之前的COS对象存储方案流量费属实让人肉疼，无意间我在GitHub看到了一个项目，可以将阿里云盘以WebDAV的形式挂载到本地局域网。\n\u0026lt;div class='github-info-card-description'\u0026gt; \u0026lt;/div\u0026gt; 搭配此项目，只要将影视资源保存在阿里云盘，本地的Kodi就可以播放，免去了本地搭建文件服务器这一环节。\n操作 下载二进制文件 aliyundrive-webdav支持多种架构的设备，可运行在x86，mipsel，arm等多种平台的设备上。\n博主的树莓派已经提前安装好了Kodi，只需要配置阿里云盘在局域网的WebDAV即可。博主打算把这个项目运行在树莓派上，因此在Releases下载已经编译好的二进制文件，ArmV7架构。\n解压后给予相应权限。\n程序的命令行用法。\n$ aliyundrive-webdav \u0026ndash;help aliyundrive-webdav 1.3.3\nUSAGE: aliyundrive-webdav [OPTIONS]\nOPTIONS: \u0026ndash;cache-size \u0026lt;CACHE_SIZE\u0026gt; Directory entries cache size [default: 1000] \u0026ndash;cache-ttl \u0026lt;CACHE_TTL\u0026gt; Directory entries cache expiration time in seconds [default: 600] \u0026ndash;debug Enable debug log \u0026ndash;domain-id \u0026lt;DOMAIN_ID\u0026gt; Aliyun PDS domain id -h, \u0026ndash;help Print help information \u0026ndash;host \u0026lt;HOST\u0026gt; Listen host [env: HOST=] [default: 0.0.0.0] -I, \u0026ndash;auto-index Automatically generate index.html \u0026ndash;no-trash Delete file permanently instead of trashing it -p, \u0026ndash;port \u0026lt;PORT\u0026gt; Listen port [env: PORT=] [default: 8080] -r, \u0026ndash;refresh-token \u0026lt;REFRESH_TOKEN\u0026gt; Aliyun drive refresh token [env: REFRESH_TOKEN=] \u0026ndash;read-only Enable read only mode \u0026ndash;root \u0026lt;ROOT\u0026gt; Root directory path [default: /] -S, \u0026ndash;read-buffer-size \u0026lt;READ_BUFFER_SIZE\u0026gt; Read/download buffer size in bytes, defaults to 10MB [default: 10485760] \u0026ndash;strip-prefix \u0026lt;STRIP_PREFIX\u0026gt; Prefix to be stripped off when handling request [env: WEBDAV_STRIP_PREFIX=] \u0026ndash;tls-cert \u0026lt;TLS_CERT\u0026gt; TLS certificate file path [env: TLS_CERT=] \u0026ndash;tls-key \u0026lt;TLS_KEY\u0026gt; TLS private key file path [env: TLS_KEY=] -U, \u0026ndash;auth-user \u0026lt;AUTH_USER\u0026gt; WebDAV authentication username [env: WEBDAV_AUTH_USER=] -V, \u0026ndash;version Print version information -w, \u0026ndash;workdir \u0026lt;WORKDIR\u0026gt; Working directory, refresh_token will be stored in there if specified -W, \u0026ndash;auth-password \u0026lt;AUTH_PASSWORD\u0026gt; WebDAV authentication password [env: WEBDAV_AUTH_PASSWORD=]\n获取refresh_token 随后我们需要到阿里云盘网页端获取自己账户的refresh_token。\n浏览器登录阿里云盘后，在控制台输入JSON.parse(localStorage.token).refresh_token\n即可获得当前账户的refresh_token。\n我们也可以手动获取refresh_token。\n登录阿里云盘后，可以在开发者工具 -\u0026gt; Application -\u0026gt; Local Storage 中的 token 字段中找到。\n开始运行 使用ssh连接至树莓派，在二进制文件同一目录下输入指令。\n将\u0026lt;REFRESH_TOKEN\u0026gt;字段替换为刚刚获取的refresh token即可。运行后如图所示。\n这时WebDAV服务就已经在本地局域网运行，局域网内设备使用 设备的局域网IP:8080 即可连接对应的WebDAV服务器。在Windows下使用RaiDrive等软件可以将其挂载至文件资源管理器。\nKodi的连接 这时我们将搭载kodi的设备连接至同一局域网，在“视频”选项卡点击“添加视频”选项。\n点击左侧的浏览按钮。\n点击添加网络位置。\n我们选择协议“WebDAV服务器（HTTP）”，服务器地址填写运行上述项目的局域网IP，端口为8080，用户名和密码不需要填写，远程路径自定义即可。设置完成后点击确定。\n完成上述操作后一路确定，我们就可以在kodi中访问远程目录的视频了。但此时视频并不会显示电影名称 海报等元素，只是以视频的形式呈现。下一篇文章会解决这一问题\n","date":"2022-05-25T06:50:59Z","permalink":"https://example.com/aliyundrive-webdav-kodi/","title":"使用阿里云盘WebDAV协议搭建kodi影视中心"},{"content":"引子 最近博主沉迷于Doctor Who，但无奈找到的资源都在百度网盘，下载速度极慢，在线观看的流畅度也堪忧，如果自己搭建一个私有云，那就不必忍受各种网盘的限制，多平台在线观看。但苦于云服务器昂贵的宽带价格，一直没能如愿，如果用5Mbps的小水管，效果甚至不如百度网盘。But，前段时间我从朋友那里了解到了对象存储，便心想将私有云接入对象存储即可解决这一问题。\n介绍 对象存储的概念 什么是对象存储？我查阅了Wikipedia，他们给出的解释是：\n不知道大家看完是什么样的心情，反正我当场就：\n说人话就是：一个多节点，非结构存储，扁平结构，弹性扩容的文件储存服务。（目前本文的图片已经正在使用对象存储）\n非结构存储：对象存储适用于存储非结构化的数据，我们日常生活中见到的文档、文本、图片、XML, HTML、各类报表、音视频信息等等都是非结构化数据。据统计，自社交网络发展以来，非结构化数据占总数据量的75%。 多节点：以腾讯云对象存储 COS 为例，COS的存储机房遍布全球，简单来说，不管你身处何处，都可以选择将数据存储在就近的机房，加快数据的传输访问。 扁平结构：对象存储中没有文件夹的概念，所有数据均存储在同一个层级中，如上述介绍提到，对于存在对象存储中的数据，你不需要知道他存在哪里，只需要通过“凭证”就可以快速获取数据。 弹性扩容：对象存储的容量是EB级以上的，EB有多大？1EB ≈ 1*10^9 GB。（这条忽略，个人用户没有需求用这么大的） 常用的对象存储服务 这是博主使用的Cloudreve网盘系统支持的对象存储服务。\n博主的服务器在腾讯云，于是便选择了腾讯云的cos作为对象存储服务，腾讯云cos新用户免费赠送半年。\n操作 开通COS对象存储服务 进入腾讯云对象存储的页面，点击创建存储桶，弹出如下页面。\n如果要在腾讯云的服务器部署网盘系统，请选择与服务器一致的地域，这样会更加节省流量。存储桶名称自定义。访问权限设为公有读私有写。\n创建完成后我们便开始进行服务器的配置。\n网盘系统的搭健 博主这里使用的是腾讯云的轻量应用服务器，可以一键部署Cloudreve系统，如果你使用的不是轻量应用服务器，则需要手动部署，这里不再赘述。\n搭建完成后直接访问服务器的IP（别问我为什么不用域名，问就是没备案），便可以看到网盘系统已经部署好了。根据提示获取管理员账号和密码，即可进入网盘系统。\n但值得注意的是，此时并不会使用对象存储，而是直接将文件保存在服务器本地。我们还需要进行存储策略的配置。\n配置存储策略 登录Cloudreve系统后，点击右上角的头像，选择管理面板，我们便进入了网盘的后台管理系统。在左侧栏点击存储策略，随后点击新建存储策略\n随后选择你使用的对象存储服务，我这里使用的是腾讯云 COS。\n按照Cloudreve的向导完成操作即可。\n用户组的设置 完成上述操作后，在管理面板中打开用户组，将管理员（也就是你所在的用户组）的存储策略改为你刚刚配置的策略。配置好相关选择，点击保存即可。这时你上传文件时，使用的就是COS的对象存储服务。\n小结 博主搭建完这个系统后，将电脑中的Doctor Who资源存储到了网盘中，上传下载速度很可观，均可跑满宽带，在线观看视频几乎不需要加载。可以欢乐地在线看视频了。本文不是腾讯云的恰饭推广文章，其它的对象存储服务商也可以使用，例如七牛云，又拍云等。\n","date":"2022-05-01T03:30:21Z","permalink":"https://example.com/qcloud-cos-netdisk/","title":"利用腾讯云对象存储COS与轻量应用云服务器搭建私有云"},{"content":"引子 清明假期闲得无聊，把小环天线架在了窗外，正好赶上下午传播来了，便尝试收了一下JMH的气象传真。效果图如下。\n准备工作 需要的软件有：\nVAC虚拟声卡 用于将音频输出loopback至音频输入。\nKG-FAX 用于气象传真的解码。\nNtleas转码软件 由于KG-FAX编码是 Shift-JIS 不适配简体中文系统 因此使用该软件进行转码。（可选，Windows10可以正常打开KG-FAX，如果不想有乱码就用这个，无所谓的话可以直接打开）\n其他条件：\n一根短波天线\n较好的传播及接收环境\n这里博主使用了有源小环天线进行接收，这款天线在0.1MHz-180MHz的频段有着不俗的表现。SDR接收机使用了前几篇文章出场过的祖国版SdrPlay RSP1A。\n开始接收 虚拟声卡配置 首先进行虚拟声卡的配置，首先安装VAC虚拟声卡软件，安装完成后打开Windows的声音设置，将默认输入设备改成”Line 1(Virtual Audio Cable)“\n频率调整 得益于博主强大的情报网，我搞到了一份美国国家海洋和大气管理局编写的全球气象传真频率表，查询后得知，JMH分别在3622.5 kHz 7795kHz和13988.5kHz 24h全天候播发，博主在根据自身条件在这里选择了在13988.5kHz接收，由于使用USB上边带模式接收，调整好对应频差后即为在13986.6kHz接收。\n随后将SDRuno的输出设备改为之前配置的虚拟声卡。如果是SDRuno，点击RX CONTROL面板的SETT.，在OUT中选择”Line 1(Virtual Audio Cable)“，重新开始即可。\n开始解码 使用Ntleas打开KG-FAX，可以在左边看到三个按钮。\n点击“掃引”按钮立即开始图像的解码。点击“自動制御”将会在接收到开始信号后才开始解码，如果图像此时已经传送了一半便无法解码，适用于想要接收一张完整传真的场景。点击“自动保存”按钮后可以设置图像解码完成后的保存路径。\n随后软件就会开始自动解码，片刻后一张FAX传真就会完成。\n","date":"2022-04-03T13:48:26Z","permalink":"https://example.com/%E6%8E%A5%E6%94%B6jmh%E6%B0%94%E8%B1%A1%E4%BC%A0%E7%9C%9F/","title":"接收JMH气象传真"},{"content":" 引子 近期中国东方航空MU5735航班发生事故坠毁，痛心之余不知大家是否注意到，各大媒体都不约而同地引用了这样一张数据图：\n这张图中清晰地显示了东航MU5735在坠落前的速度，高度等数据。飞机已经损毁到如此程度，这些数据又是怎么保存下来的呢？这便用到了我们今天所要介绍的ADS-B。\n介绍 民航客机会在1090MHz发射电磁波信号，将客机此刻的速度，方位，高度，方位角等信息下传至机场塔台。由于这一过程中的数据包并不加密，因此作为一个普通人我们也可以接收到这些数据包并通过软件解码，Flightradar24便是应用了这一原理。\n博主手头的RTL-SDR搭配原装天线加上树莓派就可以搭建一个微型个人ADS-B站点。\n制作 方案选择 博主使用了树莓派3B+与RTL-SDR的方案，使用Dump1090进行信号的解码。\n\u0026lt;div class=\u0026quot;github-info-card-description\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; 软件安装及配置 dump1090为我们提供了图形化的配置界面，因此我们可以很轻松地对软件进行配置。\n访问web页面 上述指令执行完成后，我们将树莓派连入局域网，访问下面的链接，将IP替换为树莓派的内网IP即可访问web图形界面。\n把天线放在合适的位置，即可看到地图上显示的数据。\n内网穿透（可选） 作为一个爱折腾的人，仅止于局域网访问肯定是不够的，受限于博主所处的全锥形NAT网络，想起半个月前白嫖到了腾讯云免费的一个月轻量应用服务器，便在上面部署了NPS内网穿透。\n\u0026lt;div class=\u0026quot;github-info-card-description\u0026quot;\u0026gt; \u0026lt;/div\u0026gt; 在本地树莓派上部署好NPC后，输入指定IP与端口，便可以让外网访问你的ADS-B监测站点，由于有被请喝茶的风险，在这里博主就不放出链接了。\n","date":"2022-03-24T06:24:18Z","permalink":"https://example.com/raspi-adsb-station/","title":"树莓派＋RTLSDR搭建ADS-B监测站点"},{"content":"在上一篇说说中，博主提到了要用服务器开私服。在一个阳光晴好的下午，我开始了服务器的建设：\n服务端的选择 由于多年未涉足MC服务器圈，我首先粗略了解了一下目前的主流服务端。\n众所周知，像博主这种喜欢折腾的人，自然不会选择官方提供的服务端，我查到了Minecraft Wiki上提供的第三方服务端列表。\n经过一系列权衡后，博主选择了Spigot端。选择这个服务端主要是因为其优秀的性能表现和对原版特性的支持说白了就是服务器配置太拉。\n开始安装 Spigot的BuildTools需要JAVA17。得益于Debian系强大的APT包管理器，博主很方便地成功安装了jdk17。\n打开Spigot的官网后，下载BuildTool.jar。根据网站上的指引我执行了如下指令\n正当博主泡上一壶碧螺春，准备让服务器自动构建时，发现构建工具在一个进程上卡住了。莫约15分钟后，我手里的碧螺春都凉了，服务器依旧卡在那里。\n根据我敏锐的观察力，发现是下载服务端时出了问题。于是我尝试wget直接下载服务端。于是乎\n鉴于服务器感人的网速，博主进行了一系列魔法操作，成功提高了下载速度。等待其自行下载和编译服务端即可。\n构建完成后，直接运行服务端文件。\n正当我满心欢喜等着服务器开起来时，突然又报错了。定睛一看，原来是要接受他们的EULA，不然不能开服。霸王条款了属于是\n接受EULA后，服务器便正常运行起来了。至此服务器安装完成。\n配置 打开server.properties，便可以对服务器进行基本的设置。据博主了解，身边的朋友80%使用的是mc盗版，剩下的20%玩网易。因此博主便关闭了online-mode，使得盗版账号也可正常进入服务器游玩。\n一切都配置好后，我便找了一个朋友邀请他玩服务器：\n问了一圈下来，博主发现身边大部分人玩的都是基岩版，剩下的一部分人觉得配置java很麻烦雀实，用java版的少之又少。开基岩版服务器自然是不可能的，第三方支持极少，根本不符合我爱折腾的性格。\n就在这时，我检索到了一个叫做Geyser的插件。可以实现BE-JE间的服务器互通，放入spigot的plugin目录即可使用，为了使盗版玩家也能顺利进服游玩，我又下载了Geyser官方提供的Floodgate插件进行基岩版用户的登录。\n随后，博主又在服务器上装了一些基本的插件，诸如领地，经济之类。找了几个好友后，便把服务器开了起来。\n优化 一日下午，眼看时间来到三点几，我正在饮茶，这时有人私发我qq：\n我心想服务器配置是差点，也不至于这么卡。强忍住怒火后，我进入游戏，发现tps达到了惊人的个位数。翻看聊天记录，我看到了这一幕：\n这不卡才怪…我心里想着，但让他们这么一直跑图也不是个事，且不说服务器压力有多大，而且我也要背负不少玩家的骂名。回想起前几日与我服一老玩家，现服主的交流。\n我便开始询问他\n一顿操作后我下载了Chunky，丢到服务器插件目录，输入指令，设置边界，开始预载世界后我遍把他丢在那里。第二天早上起来，发现生成进度才10%，截至本文发布时，世界还没有预载完。但已加载的区块中明显流畅了许多。\nTo be continued…..\n","date":"2022-03-09T08:07:04Z","permalink":"https://example.com/minecraft%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%90%E4%B8%8A%E3%80%91-%E5%BB%BA%E8%AE%BE%E4%B8%8E%E4%BC%98%E5%8C%96/","title":"Minecraft服务器【上】: 建设与优化"},{"content":"自从四年前从某同学那里拿到白嫖一台树莓派3B+后，除了偶尔用过几次，大部分时间是吃灰的。但事情的转机出现在半个月前的下午，我在GitHub日常检索时发现了一个有趣的项目：\n\u0026lt;div class='github-info-card-description'\u0026gt; \u0026lt;/div\u0026gt; 简单的原理介绍 其实以前我就玩过类似的项目，但仅止于87.5MHz-108MHz的FM Broadcast频段，发射的模式也只有FM。其实这两者间原理都类似：\n根据麦克斯韦的电磁理论\n随时间变化的电场产生磁场，而随时间变化的磁场又产生电场，两者互为因果。这种不断转化的场统称为电磁场。这种相互的转化形成电磁振荡。\n所以如果在树莓派的 GPIO 上，通过软件控制以一定频率输出高低电平，再加上适当长度的天线，就可以将能量以电磁波的形式发射出去。\n上手实操 这个项目最吸引我的是它广得惊人的发射范围 可支持50KHz-1GHz的信号发射和几乎所有模式的支持，虽然不清楚具体原理，但我估计FM是用调主频PLL的方式产生调频，SSB则是加上PWM控制幅度。\n作者在Repo里列出了这样一张表格\n\u0026lt;td\u0026gt; 支持状态 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 部分支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 支持 \u0026lt;/td\u0026gt; \u0026lt;td\u0026gt; 测试中 \u0026lt;/td\u0026gt; 我拿出积了一层灰的树莓派3B+，开始了折腾之旅。\n安装 首先把仓库clone下来，运行内置的安装脚本\n由于家里宽带的原因，GitHub访问日常抽风(点名批评中国移动)。漫长的一个小时过后，GitHub clone下的文件终于全部编译成功，编译完成后他会询问你是否需要超频\n前期安装工作便正式完成了\n使用 作者很贴心地在仓库中给出了一键发射的脚本。\n输入输出频率后，便进入了这个页面\n好家伙，支持很多模式啊。只要用方向键移到对应的模式就可以进行发射。发射在GPIO4上，于是我在GPIO4上插了半根杜邦线当作天线。\n当然，你也可以选择接入一根天线以达到最大的发射效率，但请首先接入一个带通滤波器，树莓派发射的杂散惊人。\n验证 无线电波看不见也摸不着，我就在想如何验证信号真的发出了呢？这时我又想起我吃灰一年半的祖国版SDRPlay RSP1A，支持1KHz-2GHz的信号接收。（如果你有RTL-SDR也可以，笔者不用RTL-SDR是因为这个设备后续可以与rpitx结合使用）\n连接电脑，打开SDRuno，这里我薅了一个手台的天线用来接收。\n艰难地将其固定好后，我便调好频率 按下发射键，一个不断移动的载波信号便在中心频率附近跳动\n随后又尝试了各种模式，立体声FM，窄带FM和各种数传（当时忘记截图了）。\n作为一个ham，我又尝试了其在短波上的发射情况，我在14270khz发射了单边带信号，用有源小环天线也实现了正常的接收。\n节目预告：RTL-SDR+Rpitx=? 这个项目搭配RTL-SDR可以有更多进阶玩法，笔者也正在慢慢探索中，下一篇文章会详细跟大家聊聊其实就是懒得弄了。\n","date":"2022-03-02T02:00:24Z","permalink":"https://example.com/rspi-radio/","title":"树莓派清灰日记：制作全模式全频段电台"},{"content":"由于疫情的原因，我被迫在家上网课，很爽。\n一日上网课时，我如爬虫一般在进行网络冲浪，一则信息映入我的眼帘：\n（为避免恰饭之嫌，部分信息被隐去）\n于是乎，我便冲动消费，买了一年服务器。最初我用这台服务器搭建了Minecraft服务器，but回想起两年前我当服主的艰难岁月，我不禁在内心叩问自己：为什么要开游戏服？\n又回想起我三年前荒废已久的个站（我互联网履历还蛮丰富的嘛），便想重拾这一大业三分钟热度。\n如你所见，本站应运而生了。\n未来我将在本站分享自己的生活，一些奇怪的想法和相关记录！感谢您的关注！\n","date":"2022-03-01T06:53:19Z","permalink":"https://example.com/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/","title":"建站小记"}]